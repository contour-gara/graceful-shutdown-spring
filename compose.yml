services:
  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - my-nw
    stop_grace_period: 2m
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: "curl -f http://localhost:8080/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      # SPRING_PROFILES_ACTIVE: gracefulShutdown
      # SPRING_LIFECYCLE_TIMEOUT_PER_SHUTDOWN_PHASE: 55s
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:29092
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - my-nw
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 2181 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s

  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    networks:
      - my-nw
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    ports:
      - "18081:8080"
    depends_on:
      - broker
    networks:
      - my-nw
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092

networks:
  my-nw:
    driver: bridge
